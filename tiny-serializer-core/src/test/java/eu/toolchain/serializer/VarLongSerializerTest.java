package eu.toolchain.serializer;

import java.io.IOException;

import org.junit.Test;

public class VarLongSerializerTest {
    final VarLongSerializer s = new VarLongSerializer();

    private void roundtrip(long value, int... pattern) throws IOException {
        Helpers.verifyRoundtrip(s, value, pattern);
    }

    @Test
    public void testValidValues() throws IOException {
        roundtrip(0L, 0x00);
        roundtrip(0x7fL, 0x7f);

        roundtrip(0x80L, 0x80, 0x01);
        roundtrip(0x3fffL, 0xff, 0x7f);

        roundtrip(0x4000L, 0x80, 0x80, 0x01);
        roundtrip(0x1fffffL, 0xff, 0xff, 0x7f);

        roundtrip(0x200000L, 0x80, 0x80, 0x80, 0x01);
        roundtrip(0xfffffffL, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(0x10000000L, 0x80, 0x80, 0x80, 0x80, 0x01);
        roundtrip(0x7ffffffffL, 0xff, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(0x800000000L, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01);
        roundtrip(0x3ffffffffffL, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(0x40000000000L, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01);
        roundtrip(0x1ffffffffffffL, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(0x2000000000000L, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01);
        roundtrip(0xffffffffffffffL, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(0x100000000000000L, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01);
        roundtrip(Long.MAX_VALUE, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f);

        roundtrip(Long.MIN_VALUE, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01);

        roundtrip(-0x4000L, 0x80, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01);
        roundtrip(-0x81, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01);
        roundtrip(-0x80, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01);
        roundtrip(-1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01);
    }
}
